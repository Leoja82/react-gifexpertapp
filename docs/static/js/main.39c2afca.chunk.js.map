{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXY,SAACC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAMlB,SACG,uBACKO,KAAK,OACLC,MAAOT,EACPU,SAnBe,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAabM,GAba,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACI,sBAAKc,UAAU,yBAAf,UACI,qBAAKC,IAAOf,EAAKgB,IAAMN,IACvB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECLwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC3BqB,KAAM,GACNa,SAAS,IAFjB,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAY,WAERxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAMtB,CAACpB,IAIGqB,EDnByBK,CAAc1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAGrB,OACI,qCACA,oBAAIJ,UAAU,oBAAd,SAAmChB,IAElCoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEcnBgB,EAhCM,WAGjB,MAAoCzC,mBAAS,CAAC,aAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAQA,OACK,qCACG,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEJ,6BAEQ2C,EAAWnB,KAAK,SAACT,GAAD,OACZ,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MChB7B6B,IAASC,OAAS,cAAC,EAAD,IAChBC,SAASC,eAAe,W","file":"static/js/main.39c2afca.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handledInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handledSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( cats => [inputValue,...cats,]);\r\n            setInputValue('')\r\n        }\r\n           \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handledSubmit}>\r\n           <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handledInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async( category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=bJaPljNAx6VuwX0NQmnmRQ8XKwGqeXYo`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n   return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__bounceIn\">\r\n            <img src = {url} alt ={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    \r\n    const { data:images, loading} = useFetchGifs( category );\r\n\r\n     \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__bounceIn\">{category}</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n        <div className=\"card-grid\">\r\n                             \r\n            {\r\n                images.map( img => (\r\n                    <GifGridItem \r\n                        key={ img.id }\r\n                        {...img }\r\n                        />\r\n                ))\r\n            }\r\n        \r\n                  \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs} from '../helpers/getGifs'; \r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n            data: [],\r\n            loading: true,\r\n    });\r\n\r\n    useEffect ( ()=> {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                                 \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n                 \r\n           \r\n            })\r\n\r\n    }, [category] )\r\n\r\n    \r\n\r\n    return state; //{data:[], loading: true};\r\n\r\n\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n   \r\n    const [categories, setCategories] = useState(['futurama']);\r\n\r\n    //const handleAdd = () => {\r\n      //  setCategories( [...categories,{value}] );\r\n      //  setCategories( cats => [...cats,'Futurama']\r\n\r\n    // }\r\n    \r\n    return(\r\n         <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            \r\n        <ol>\r\n            {\r\n                categories.map( (category) => ( \r\n                    <GifGrid \r\n                        key={category}\r\n                        category={category} />\r\n                ))\r\n            }\r\n        </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\n\nimport './index.css';\n\n\n\nReactDOM.render(  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}